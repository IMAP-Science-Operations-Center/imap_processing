"""Tests the L1a processing for decommutated CoDICE data"""

from pathlib import Path

import cdflib
import numpy as np
import pytest

from imap_processing import imap_module_directory
from imap_processing.codice.codice_l0 import decom_packets
from imap_processing.codice.codice_l1a import process_codice_l1a

TEST_PROCESSING_DATA = [
    (
        Path(
            f"{imap_module_directory}/tests/codice/data/raw_ccsds_20230822_122700Z_idle.bin"
        ),
        "imap_codice_l1a_hskp_20100101_v001.cdf",
    ),
    (
        Path(f"{imap_module_directory}/tests/codice/data/lo_fsw_view_5_ccsds.bin"),
        "imap_codice_l1a_lo-sw-species-counts_20240319_v001.cdf",
    ),
    (
        Path(f"{imap_module_directory}/tests/codice/data/lo_fsw_view_6_ccsds.bin"),
        "imap_codice_l1a_lo-nsw-species-counts_20240319_v001.cdf",
    ),
]

TEST_VALIDATION_DATA = [
    (
        Path(f"{imap_module_directory}/tests/codice/data/lo_fsw_view_5_ccsds.bin"),
        Path(
            f"{imap_module_directory}/tests/codice/data/temp_validation_lo-sw-species-counts.cdf"
        ),
    ),
    (
        Path(f"{imap_module_directory}/tests/codice/data/lo_fsw_view_6_ccsds.bin"),
        Path(
            f"{imap_module_directory}/tests/codice/data/temp_validation_lo-nsw-species-counts.cdf"
        ),
    ),
]


@pytest.mark.parametrize(("test_file", "expected_filename"), TEST_PROCESSING_DATA)
def test_process_codice_l1a(test_file: Path, expected_filename: str):
    """Tests the ``process_codice_l1a`` function and ensure that a CDF files are
    created.

    Parameters
    ----------
    test_file : Path
        The file containing test data
    expected_filename : str
        The filename of the generated CDF file
    """

    packets = decom_packets(test_file)
    _, cdf_filename = process_codice_l1a(packets)
    assert cdf_filename.name == expected_filename


@pytest.mark.parametrize(("test_file", "validation_file"), TEST_VALIDATION_DATA)
def test_l1a_validation_data(test_file: Path, validation_file: Path):
    """Tests that the generated L1a CDF contents are valid.

    TODO: This tests currently uses validation files that the pipeline itself
    generates, rather than a CDF file generated by the CoDICE instrument team.
    Once proper validation files are acquired, this test function should point
    to those. This function currently just serves as a framework for validating
    files, but does not actually validate them.
    """

    # Retrieve the validation file contents
    validation_data = cdflib.xarray.cdf_to_xarray(validation_file)

    # Process packet
    packets = decom_packets(test_file)
    dataset, _ = process_codice_l1a(packets)

    # Ensure the processed data matches the validation data
    for variable in validation_data:
        assert variable in dataset
        if variable != "epoch":
            np.testing.assert_array_equal(
                validation_data[variable].data, dataset[variable].data[0]
            )
