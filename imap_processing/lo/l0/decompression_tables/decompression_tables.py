"""Compression tables for decompompressing Lo L0 data."""
from collections import namedtuple

import numpy as np

TOFData = namedtuple(
    "TOFData", ["ENERGY", "POS", "TOF0", "TOF1", "TOF2", "TOF3", "CKSM", "TIME"]
)

SIGNIFICANT_BITS = TOFData(
    np.array([0, 0.32, 0.16]),
    np.array([0.32, 0.16]),
    np.array(
        [
            163.84,
            81.92,
            40.9,
            20.48,
            10.24,
            5.12,
            2.56,
            1.28,
            0.64,
            0.32,
        ]
    ),
    np.array(
        [
            81.92,
            40.9,
            20.48,
            10.24,
            5.12,
            2.56,
            1.28,
            0.64,
            0.32,
        ]
    ),
    np.array(
        [
            81.92,
            40.9,
            20.48,
            10.24,
            5.12,
            2.56,
            1.28,
            0.64,
            0.32,
        ]
    ),
    np.array(
        [
            10.24,
            5.12,
            2.56,
            1.28,
            0.64,
            0.32,
        ]
    ),
    np.array([1.28, 0.64, 0.32]),
    np.array(
        [327.68, 163.84, 81.92, 40.9, 20.48, 10.24, 5.12, 2.56, 1.28, 0.64, 0.32, 0.16]
    ),
)

# Cases 4, 6, 10, 12, 13
# if Bronze = 1, use table as is
# if Bronze = 0, position not transmitted, TOF3 is transmitted
# and will be six bits long
CASE_DECODER = {
    (0, 1): TOFData(
        3,
        0,
        10,
        0,
        9,
        6,
        3,
        12,
    ),
    (0, 0): TOFData(
        3,
        0,
        10,
        9,
        9,
        6,
        0,
        12,
    ),
    (1, 0): TOFData(
        3,
        0,
        10,
        9,
        9,
        0,
        0,
        12,
    ),
    (2, 0): TOFData(
        3,
        2,
        9,
        9,
        0,
        0,
        0,
        12,
    ),
    (3, 0): TOFData(
        3,
        0,
        11,
        0,
        0,
        0,
        0,
        12,
    ),
    (4, 1): TOFData(
        3,
        2,
        10,
        0,
        0,
        0,
        0,
        12,
    ),
    (4, 0): TOFData(
        3,
        0,
        10,
        0,
        0,
        6,
        0,
        12,
    ),
    (5, 0): TOFData(
        3,
        0,
        11,
        0,
        9,
        0,
        0,
        12,
    ),
    (6, 1): TOFData(
        3,
        2,
        10,
        0,
        0,
        0,
        0,
        12,
    ),
    (6, 0): TOFData(
        3,
        0,
        10,
        0,
        0,
        6,
        0,
        12,
    ),
    (7, 0): TOFData(
        3,
        0,
        11,
        0,
        0,
        0,
        0,
        12,
    ),
    (8, 0): TOFData(
        3,
        2,
        0,
        9,
        9,
        0,
        0,
        12,
    ),
    (9, 0): TOFData(
        3,
        0,
        0,
        10,
        10,
        0,
        0,
        12,
    ),
    (10, 1): TOFData(
        3,
        2,
        0,
        10,
        0,
        0,
        0,
        12,
    ),
    (10, 0): TOFData(
        3,
        0,
        0,
        10,
        0,
        6,
        0,
        12,
    ),
    (11, 0): TOFData(
        3,
        0,
        0,
        11,
        0,
        0,
        0,
        12,
    ),
    (12, 1): TOFData(
        3,
        2,
        0,
        0,
        10,
        0,
        0,
        12,
    ),
    (12, 0): TOFData(
        3,
        0,
        0,
        0,
        10,
        6,
        0,
        12,
    ),
    (13, 1): TOFData(
        3,
        0,
        0,
        0,
        11,
        0,
        0,
        12,
    ),
    (13, 0): TOFData(
        3,
        0,
        0,
        0,
        11,
        6,
        0,
        12,
    ),
}
