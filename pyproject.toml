[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "imap-processing"
version = "0.2.0"
description = "IMAP Science Operations Center Processing"
authors = ["IMAP SDC Developers <imap-sdc@lists.lasp.colorado.edu>"]
readme = "README.md"
license = "MIT"
keywords = ["IMAP", "SDC", "SOC", "Science Operations"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]

[tool.poetry.dependencies]
cdflib = "==1.2.6"
imap-data-access = ">=0.5.0"
python = ">=3.9,<4"
space_packet_parser = ">=4.2.0"
spiceypy = ">=6.0.0"
xarray = '>=2023.0.0'

# Optional dependencies
numpydoc = {version="^1.5.0", optional=true}
openpyxl = {version=">=3.0.7", optional=true}
pandas = {version=">=2.0.0", optional=true}
pre-commit = {version="^3.3.3", optional=true}
pydata-sphinx-theme = {version="*", optional=true}
pytest = {version=">=6.2.5", optional=true}
pytest-cov = {version="^4.0.0", optional=true}
ruff = {version="==0.2.1", optional=true}
sphinx = {version="*", optional=true}
sphinxcontrib-openapi = {version="^0.8.3", optional=true}

[tool.poetry.extras]
dev = ["pre-commit", "ruff"]
doc = ["numpydoc", "pydata-sphinx-theme", "sphinx", "sphinxcontrib-openapi"]
test = ["pytest", "pytest-cov"]
tools= ["pandas", "openpyxl"]

[project.urls]
homepage = "https://github.com/IMAP-Science-Operations-Center"
repository = "https://github.com/IMAP-Science-Operations-Center/imap_processing"

[tool.pytest.ini_options]
testpaths = [
  "imap_processing/tests",
]
addopts = "-ra"


[tool.ruff]
target-version = "py39"
lint.select = ["B", "D", "E", "F", "I", "N", "S", "W", "PL", "PT", "UP", "RUF"]
# D104: Missing docstring in public package
# PLR2004: Magic value in comparison
# RUF200: pyproject missing field (poetry doesn't follow the spec)
lint.ignore = ["D104", "PLR2004", "RUF200", "S311"]

[tool.ruff.lint.per-file-ignores]
# S603 unchecked input in subprocess call is fine in our tests
# PT006 Wrong type passed to first argument of @pytest.mark.parametrize
"*/tests/*" = ["D", "S101", "S603", "PT006"]
"tools/xtce*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poetry.scripts]
imap_cli = 'imap_processing.cli:main'

[tool.codespell]
ignore-words-list = "livetime"
